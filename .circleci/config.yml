version: 2.1 # use CircleCI 2.1
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/project # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:12 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - run: chmod +x ./cc-test-reporter
      - run:
          name: update-yarn
          command: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: ./cc-test-reporter before-build
      - run: # run coverage report
          name: code-coverage
          command: 'yarn test --ci --runInBand --reporters=default --reporters=jest-junit --coverage'
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - run: ./cc-test-reporter after-build -t clover --exit-code $?
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: coverage
          prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: reports/
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples